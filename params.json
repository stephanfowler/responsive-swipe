{"tagline":"Swipable edition-based navigation with responsive content loading. A jQuery plugin.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Responsive-swipe","body":"responsive-swipe\r\n================\r\n\r\nSwipable edition-based page loader, with responsive content loading.\r\n\r\n###Example Site\r\n\r\nhttp://metro.co.uk/\r\n\r\n###Javascript\r\n\r\nBasic setup with a static edition:\r\n```javascript\r\nvar mySwipe = $('#pageBody').responsiveSwipe({\r\n\tedition: ['/', '/foo', '/bar', '/etc']\r\n});\r\n```\r\n\r\nBasic setup with a dynamically switching edition:\r\n```javascript\r\nvar afterShow = function (context, pageData, api) {\r\n\t// On initial page, or following a click, set the edition to what's passed in via the pageData mechanism\r\n\t// Otherwise - eg. following a swipe - ignore the passed-in edition.\r\n\tif( pageData.clickType === 'initial' || pageData.clickType === 'link') {\r\n\t\tapi.setEdition(pageData.edition);\r\n\t}\r\n}\r\n\r\nvar mySwipe = $('#pageBody').responsiveSwipe({\r\n\tafterShow: afterShow\r\n});\r\n```\r\n\r\n####HTML\r\n```html\r\n<div id=\"pageBody\">\r\n\t<div id=\"swipeview-slider\">\r\n\t\t<div id=\"swipeview-masterpage-0\">\r\n\t\t\t<!-- Leave empty. First lefthand content will load here -->\r\n\t\t</div>\r\n\t\t<div id=\"swipeview-masterpage-1\">\r\n\t\t\t<div class=\"pageBodyInner\">\r\n\t\t\t\t<!-- Put the initial content in this div -->\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div id=\"swipeview-masterpage-2\">\r\n\t\t\t<!--Leave empty. First righthand content will load here -->\r\n\t\t</di\r\n\t</div>\r\n</div>\r\n```\r\n\r\n###Configuration options\r\n\r\nValues show are defaults:\r\n```javascript\r\n// Callback after a pane is loaded (including hidden panes); use for fancy js-managed rendering.\r\nafterLoad: function(){},\r\n\r\n// Callback before any pane is made visible.\r\nbeforeShow: function(){},\r\n\r\n// Callback after a pane is made visible; use for analytics events, social buttons, etc.\r\nafterShow: function(){},\r\n\r\n// Validator regular expression for Ajax responses.\r\najaxRegex: '.*',\r\n\r\n// Possible values for screen width. For cacheing, the fewer the better.\r\nbreakpoints: [481, 768, 1024],\r\n\r\n// A list of paths - e.g. [\"\\/\",\"\\/foo\\/\", \"\\/bar\\/\"] - which left/right actions will step through.\r\n// Set the edition using this option, or in afterShow callback function using api.setEdition. The latter method also allows you to change the edition mid-flow .\r\nedition: [],\r\n\r\n// Allow ajax+pushState behaviour (requires HTML5 History API support)\r\nenablePjax: true,\r\n\r\n// Allow swipe behaviour (requires CSS Transitions support)\r\nenableSwipe: true,\r\n\r\n// Reload content on window resize; switches the width metric to window- rather than screen-width; for testing only.\r\nemulator: false,\r\n\r\n// Milliseconds until edition should expire, i.e. cache should flush and/or content should reload instead of Ajax'ing. 0 => no expiry.\r\nexpiryPeriod: 0,\r\n\r\n// CSS selector for anchors that should initiate an ajax+pushState reload.\r\nlinkSelector: 'a:not(.no-ajax)',\r\n\r\n// The CSS selector for an element containing a data-json attribute with arbitrary data about the page.\r\npageDataSelector: '.responsive-swipe-meta',\r\n\r\n// The name of the query param sent wth Ajax page-fragment requests\r\nqueryParam: 'frag_width',\r\n\r\n// CSS selector for a spinner/busy indicator\r\nloadingIndicator: undefined,\r\n\r\n// The custom swipeview.js lib\r\nswipeViewLib: '/js/responsive-swipe_swipeview.js'\r\n```\r\n\r\n###Capabilities detected:\r\n\r\n* __HTML5 History API__ - allows changing the URL after an ajax load. Without this, we won't go ahead with ajax page loading.\r\n\r\n* __CSS Transitions__ - allows sliding of left/right preloaded panes.\r\n\r\nThree capability combinations that are supported are:\r\n\r\n* History=false                   : no pjax navigation; (IE < 10, Android native browser, etc)\r\n* History=true, Transitions=false : pjax page navigation; no swiping; (An unlikely case; Transitions was widely implemented before History was)\r\n* History=true, Transitions=true  : pjax page navigation; swiping. (Modern browsers)\r\n\r\nYou can override these using the enablePjax and enableSwipe options. (You can only disable supported features, not enable unsupported ones!)\r\n\r\n###Dependencies\r\n\r\nRequires a [forked version](https://github.com/stephanfowler/SwipeView) of [SwipeView](https://github.com/cubiq/SwipeView) (also included in this repo) and jQuery.\r\n\r\n###Docs\r\n\r\nMore coming soon.\r\n\r\n"}